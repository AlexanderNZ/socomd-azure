<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SOCOMD || Unit Structure</title>

    <style>

        .node {
            cursor: pointer;
        }

        .node circle {
            fill: #fff;
            stroke: steelblue;
            stroke-width: 3px;
        }

        .node text {
            font: 12px sans-serif;
        }

        .link {
            fill: none;
            stroke: #ccc;
            stroke-width: 2px;
        }

    </style>

    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content=""/>
    <meta name="author" content="Alex Corkin: www.4lex.nz"/>
    <!-- css -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="css/fancybox/jquery.fancybox.css" rel="stylesheet">
    <link href="css/jcarousel.css" rel="stylesheet"/>
    <link href="css/flexslider.css" rel="stylesheet"/>
    <link href="css/style.css" rel="stylesheet"/>


    <!-- Theme skin -->
    <link href="skins/default.css" rel="stylesheet"/>

    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>

</head>
<body>

<div id="unitStructure-wrapper">

    <header>
        <div class="navbar navbar-default navbar-static-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="index"><span>S</span>OCOMD</a>
                </div>
                <div class="navbar-collapse collapse ">
                    <ul class="nav navbar-nav">
                        <li class="active"><a href="index">Home</a></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle " data-toggle="dropdown" data-hover="dropdown"
                               data-delay="0" data-close-others="false">About Us <b
                                        class=" icon-angle-down"></b></a>
                            <ul class="dropdown-menu">
                                <li><a href="aboutUs#who">Who are we?</a></li>
                                <li><a href="aboutUs#serious">How Serious are we?</a></li>
                                <li><a href="aboutUs#when">When do we Play?</a></li>
                                <li><a href="recruitment#signup">How do I sign up?</a></li>
                            </ul>
                        </li>

                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle " data-toggle="dropdown" data-hover="dropdown"
                               data-delay="0" data-close-others="false">Unit Structure <b
                                        class=" icon-angle-down"></b></a>
                            <ul class="dropdown-menu">
                                <li><a href="unitStructure">Structure Overview</a></li>
                                <li class="divider"></li>
                                <li><a href="unitStructure">SOCOMD HQ</a></li>
                                <li><a href="unitStructure">J1: Administration</a></li>
                                <li><a href="unitStructure">J2: Intelligence</a></li>
                                <li><a href="unitStructure">J3: Operations</a></li>
                                <li><a href="unitStructure">J4: Logistics</a></li>
                                <li class="divider"></li>
                                <li><a href="unitStructure">2nd Commando Regiment</a></li>
                                <li><a href="unitStructure">171st Aviation Regiment</a></li>
                                <li class="divider"></li>
                                <li><a href="unitStructure">Awards and Recognition</a></li>
                            </ul>
                        </li>

                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle " data-toggle="dropdown" data-hover="dropdown"
                               data-delay="0" data-close-others="false">Recruitment <b class=" icon-angle-down"></b></a>
                            <ul class="dropdown-menu">
                                <li><a href="recruitment">Application Form</a></li>
                                <li><a href="recruitment">Successful Applicatants </a></li>
                                <li><a href="recruitment">Probation and Behaviour</a></li>
                                <li><a href="recruitment">Reserves Regiment Policy</a></li>
                                <li><a href="recruitment">Contact Us</a></li>
                            </ul>
                        </li>
                        <li><a href="portfolio">Media</a></li>
                        <li><a href="blog">Blog</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </header>

    <div class="row section-1">
        <div class="col-sm-2 col-md-2"></div>
        <div id="basicStructure" class="col-sm-8 col-md-8">
            <h1 class="text-center">Unit Structure</h1>

            <img src="img/SOCOMD-Orbat.PNG" align="middle">

            <h2 class="text-center">ORBAT</h2>

            <p>SOCOMD is an Australian MILSIM Task Force divided into two separate Regiments and one detached Squadron;
                the 1st Commando Regiment, the 2nd Commando Regiment, and 171st Aviation Squadron (previously 5th
                Aviation Regiment) detached from Australia's 6th Aviation Regiment. The 2nd Commando Regiment is
                SOCOMD's main battle-force, and can be deployed at the Platoon Level, while being supported by the 171st
                Aviation Squadron. SOCOMD staff group resides under SOCOMD HQ , which governs the Task Force and
                consists of four Joint Staff Sections (JSS) J1 to J4. Community members in these departments actively
                contribute to SOCOMD through content generation, server administration, and various other tasks that
                keep SOCOMD operational from a technical perspective. The Task Force is directed by its Chief Commanding
                Officer (CCO) assisted by the Chief Executive Officer (CXO) and Senior Staff Officers (SSOs).</p>

            <div>
                <h3 class="text-center">Command Appointments</h3>

                <div id="tree"></div>

                <script>

                    // ************** Generate the tree diagram	 *****************
                    var margin = {top: 30, right: 20, bottom: 30, left: 0},
                            width = 1500 - margin.left - margin.right,
                            height = 1500 - margin.top - margin.bottom;

                    var i = 0,
                            duration = 750,
                            root;

                    var tree = d3.layout.tree()
                            .size([height, width]);

                    var diagonal = d3.svg.diagonal()
                            .projection(function (d) {
                                return [d.x, d.y];
                            });

                    var svg = d3.select("#tree").append("svg")
                            .attr("width", width + margin.left + margin.right)
                            .attr("height", height + margin.top + margin.bottom)
                            .append("g")
                            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                    d3.json("js/treeData.json", function (error, treeData) {
                        root = treeData[0];
                        root.x0 = 0;
                        root.y0 = 0;
                        update(root);
                    });


                    update(root);

                    d3.select(self.frameElement).style("height", "500px");

                    function update(source) {

                        // Compute the new tree layout.
                        var nodes = tree.nodes(root).reverse(),
                                links = tree.links(nodes);

                        // Normalize for fixed-depth.
                        nodes.forEach(function (d) {
                            d.y = d.depth * 100;
                        });

                        // Update the nodes…
                        var node = svg.selectAll("g.node")
                                .data(nodes, function (d) {
                                    return d.id || (d.id = ++i);
                                });

                        // Enter any new nodes at the parent's previous position.
                        var nodeEnter = node.enter().append("g")
                                .attr("class", "node")
                                .attr("transform", function (d) {
                                    return "translate(" + source.x0 + "," + source.y0 + ")";
                                })
                                .on("click", click);

                        nodeEnter.append("circle")
                                .attr("r", 1e-6)
                                .style("fill", function (d) {
                                    return d._children ? "lightsteelblue" : "#fff";
                                });

                        nodeEnter.append("text")
                                .attr("y", function (d) {
                                    return d.children || d._children ? -18 : 18;
                                })
                                .attr("dy", ".35em")
                                .attr("text-anchor", "middle")
                                .text(function (d) {
                                    return d.name;
                                })
                                .style("fill-opacity", 1);

                        // Transition nodes to their new position.
                        var nodeUpdate = node.transition()
                                .duration(duration)
                                .attr("transform", function (d) {
                                    return "translate(" + d.x + "," + d.y + ")";
                                });

                        nodeUpdate.select("circle")
                                .attr("r", 10)
                                .style("fill", function (d) {
                                    return d._children ? "lightsteelblue" : "#fff";
                                });

                        nodeUpdate.select("text")
                                .style("fill-opacity", 1);

                        // Transition exiting nodes to the parent's new position.
                        var nodeExit = node.exit().transition()
                                .duration(duration)
                                .attr("transform", function (d) {
                                    return "translate(" + source.x + "," + source.y + ")";
                                })
                                .remove();

                        nodeExit.select("circle")
                                .attr("r", 1e-6);

                        nodeExit.select("text")
                                .style("fill-opacity", 1e-6);

                        // Update the links…
                        var link = svg.selectAll("path.link")
                                .data(links, function (d) {
                                    return d.target.id;
                                });

                        // Enter any new links at the parent's previous position.
                        link.enter().insert("path", "g")
                                .attr("class", "link")
                                .attr("d", function (d) {
                                    var o = {x: source.x0, y: source.y0};
                                    return diagonal({source: o, target: o});
                                });

                        // Transition links to their new position.
                        link.transition()
                                .duration(duration)
                                .attr("d", diagonal);

                        // Transition exiting nodes to the parent's new position.
                        link.exit().transition()
                                .duration(duration)
                                .attr("d", function (d) {
                                    var o = {x: source.x, y: source.y};
                                    return diagonal({source: o, target: o});
                                })
                                .remove();

                        // Stash the old positions for transition.
                        nodes.forEach(function (d) {
                            d.x0 = d.x;
                            d.y0 = d.y;
                        });
                    }

                    // Toggle children on click.
                    function click(d) {
                        if (d.children) {
                            d._children = d.children;
                            d.children = null;
                        } else {
                            d.children = d._children;
                            d._children = null;
                        }
                        update(d);
                    }
                </script>

            </div>
            <h3 class="text-center">Who are We?</h3>

        </div>
        <div class="col-sm-2 col-md-2"></div>
    </div>

</div>

<script src="js/jquery.js"></script>
<script src="js/jquery.easing.1.3.js"></script>
<script src="js/bootstrap.min.js"></script>
<script src="js/jquery.fancybox.pack.js"></script>
<script src="js/jquery.fancybox-media.js"></script>
<script src="js/google-code-prettify/prettify.js"></script>
<script src="js/portfolio/jquery.quicksand.js"></script>
<script src="js/portfolio/setting.js"></script>
<script src="js/jquery.flexslider.js"></script>
<script src="js/animate.js"></script>
<script src="js/custom.js"></script>
</body>
</html>